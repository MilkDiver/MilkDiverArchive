/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/audio.js":
/*!**********************!*\
  !*** ./src/audio.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyserNode: () => (/* binding */ analyserNode),\n/* harmony export */   audioCtx: () => (/* binding */ audioCtx),\n/* harmony export */   biquadFilterNode: () => (/* binding */ biquadFilterNode),\n/* harmony export */   distortionFilterNode: () => (/* binding */ distortionFilterNode),\n/* harmony export */   loadSoundFile: () => (/* binding */ loadSoundFile),\n/* harmony export */   lowShelfBiquadFilterNode: () => (/* binding */ lowShelfBiquadFilterNode),\n/* harmony export */   pauseCurrentSound: () => (/* binding */ pauseCurrentSound),\n/* harmony export */   playCurrentSound: () => (/* binding */ playCurrentSound),\n/* harmony export */   setVolume: () => (/* binding */ setVolume),\n/* harmony export */   setupWebAudio: () => (/* binding */ setupWebAudio)\n/* harmony export */ });\n// audio.js\r\n// Desc.: Creates audio nodes and connects them to the audio context.\r\n// Written by: Jack Moyen\r\n// Last Updated: March 2025\r\n// Reformatted by AI. Obviously.\r\n\r\nlet audioCtx;\r\nlet element, sourceNode, analyserNode, gainNode, biquadFilterNode, lowShelfBiquadFilterNode, distortionFilterNode;\r\n\r\nconst DEFAULTS = Object.freeze({\r\n  gain: 0.2,\r\n  numSamples: 256\r\n});\r\n\r\nlet audioData = new Uint8Array(DEFAULTS.numSamples / 2);\r\n\r\n//Audio Setup\r\nconst setupWebAudio = (filePath) => {\r\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  audioCtx = new AudioContext();\r\n\r\n  element = new Audio();\r\n  loadSoundFile(filePath);\r\n\r\n  //Node Setup\r\n\r\n  //Source Node\r\n  sourceNode = audioCtx.createMediaElementSource(element);\r\n  \r\n\r\n  //Analyser Node\r\n  analyserNode = audioCtx.createAnalyser();\r\n  analyserNode.fftSize = DEFAULTS.numSamples;\r\n\r\n  //Biquad Filter Nodes\r\n  biquadFilterNode = audioCtx.createBiquadFilter();\r\n  biquadFilterNode.type = \"highshelf\";\r\n  lowShelfBiquadFilterNode = audioCtx.createBiquadFilter();\r\n  lowShelfBiquadFilterNode.type = \"lowshelf\";\r\n\r\n  //Distortion Filter Node\r\n  distortionFilterNode = audioCtx.createWaveShaper();\r\n\r\n  //Gain Node\r\n  gainNode = audioCtx.createGain();\r\n  gainNode.gain.value = DEFAULTS.gain;\r\n\r\n  //Node Connections\r\n  sourceNode.connect(analyserNode);\r\n  analyserNode.connect(biquadFilterNode);\r\n  biquadFilterNode.connect(lowShelfBiquadFilterNode);\r\n  lowShelfBiquadFilterNode.connect(distortionFilterNode);\r\n  distortionFilterNode.connect(gainNode);\r\n  gainNode.connect(audioCtx.destination);\r\n};\r\n\r\nconst loadSoundFile = (filePath) => {\r\n  element.src = filePath;\r\n};\r\n\r\nconst playCurrentSound = () => {\r\n  element.play();\r\n};\r\n\r\nconst pauseCurrentSound = () => {\r\n  element.pause();\r\n};\r\n\r\nconst setVolume = (value) => {\r\n  gainNode.gain.value = Number(value);\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://av-ultimate/./src/audio.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawParams: () => (/* binding */ drawParams),\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _audio_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audio.js */ \"./src/audio.js\");\n/* harmony import */ var _visualizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./visualizer.js */ \"./src/visualizer.js\");\n// main.js\r\n// Desc.: Sets up the main event loop and hooks up UI\r\n// Written by: Jack Moyen\r\n// Last Updated: March 2025\r\n// Reformatted by AI. Obviously.\r\n\r\n\r\n\r\n\r\n\r\nlet drawParams = {\r\n  waveform: false,\r\n  gradient: false,\r\n  bars: false,\r\n  circles: false,\r\n  ships: false,\r\n  noise: false,\r\n  invert: false,\r\n  emboss: false\r\n};\r\n\r\nconst DEFAULTS = Object.freeze({\r\n  sound1: \"media/Peanuts Theme.mp3\"\r\n});\r\n\r\n//Initial setup loop\r\nconst init = (data) => {\r\n  //Basic setup\r\n  _audio_js__WEBPACK_IMPORTED_MODULE_1__.setupWebAudio(DEFAULTS.sound1);\r\n  console.log(\"init called\");\r\n\r\n  //Canvas and UI setup\r\n  let canvasElement = document.querySelector(\"canvas\");\r\n  setupUI(canvasElement, data);\r\n  _visualizer_js__WEBPACK_IMPORTED_MODULE_2__.setupCanvas(canvasElement, _audio_js__WEBPACK_IMPORTED_MODULE_1__.analyserNode);\r\n  //Animation loop\r\n  animate();\r\n};\r\n\r\nconst setupUI = (canvasElement, data) => {\r\n\r\n  //Imported Data\r\n  document.querySelector(\"#title-Main\").innerHTML = data.title;\r\n\tconst audioImport = data.audio;\r\n\tconst audioTitles = data.audioTitles;\r\n  //Imported Track Select\r\n  let trackSelect = document.querySelector(\"#trackSelect\");\r\n  for (let i = 0; i < audioImport.length; i++) {\r\n    trackSelect.innerHTML += `<option value=\"${audioImport[i]}\">${audioTitles[i]}</option>`;\r\n  }\r\n  //Imported Parameters\r\n\tdrawParams = data.startupParams;\r\n  Object.keys(drawParams).forEach(key => {\r\n    if (drawParams[key]) {\r\n        document.querySelector(`#cb-${key}`).checked = true;\r\n    }\r\n  });\r\n\r\n  //Fullscreen button\r\n  const fsButton = document.querySelector(\"#btn-fs\");\r\n  fsButton.onclick = () => _utils_js__WEBPACK_IMPORTED_MODULE_0__.goFullscreen(canvasElement);\r\n\r\n  //Play button\r\n  const playButton = document.querySelector(\"#btn-play\");\r\n  playButton.onclick = (e) => {\r\n    if (_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state === \"suspended\") {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.resume();\r\n    }\r\n\r\n    if (e.target.dataset.playing === \"no\") {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.playCurrentSound();\r\n      e.target.dataset.playing = \"yes\";\r\n    } else {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.pauseCurrentSound();\r\n      e.target.dataset.playing = \"no\";\r\n    }\r\n  };\r\n\r\n  //Volume slider\r\n  let volumeSlider = document.querySelector(\"#slider-volume\");\r\n  let volumeLabel = document.querySelector(\"#volumeLabel\");\r\n  volumeSlider.oninput = (e) => {\r\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.setVolume(e.target.value);\r\n    volumeLabel.innerHTML = Math.round((e.target.value / 2) * 100);\r\n  };\r\n  volumeSlider.dispatchEvent(new Event(\"input\"));\r\n\r\n  //Track select\r\n  trackSelect.onchange = (e) => {\r\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.loadSoundFile(e.target.value);\r\n    if (playButton.dataset.playing === \"yes\") {\r\n      playButton.dispatchEvent(new MouseEvent(\"click\"));\r\n    }\r\n  };\r\n\r\n  //Checkbox setup\r\n  let waveformCB = document.querySelector(\"#cb-waveform\");\r\n  let gradientCB = document.querySelector(\"#cb-gradient\");\r\n  let barsCB = document.querySelector(\"#cb-bars\");\r\n  let circlesCB = document.querySelector(\"#cb-circles\");\r\n  let shipsCB = document.querySelector(\"#cb-ships\");\r\n  let noiseCB = document.querySelector(\"#cb-noise\");\r\n  let invertCB = document.querySelector(\"#cb-invert\");\r\n  let embossCB = document.querySelector(\"#cb-emboss\");\r\n\r\n  waveformCB.onchange = () => { drawParams.waveform = waveformCB.checked; };\r\n  gradientCB.onchange = () => { drawParams.gradient = gradientCB.checked; };\r\n  barsCB.onchange = () => { drawParams.bars = barsCB.checked; };\r\n  circlesCB.onchange = () => { drawParams.circles = circlesCB.checked; };\r\n  shipsCB.onchange = () => { drawParams.ships = shipsCB.checked; };\r\n  noiseCB.onchange = () => { drawParams.noise = noiseCB.checked; };\r\n  invertCB.onchange = () => { drawParams.invert = invertCB.checked; };\r\n  embossCB.onchange = () => { drawParams.emboss = embossCB.checked; };\r\n\r\n  //Biquad Filters\r\n  let highshelf = false;\r\n  let lowshelf = false;\r\n\r\n  const toggleHighshelf = () => {\r\n    if (highshelf) {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.biquadFilterNode.frequency.setValueAtTime(1000, _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.currentTime);\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.biquadFilterNode.gain.setValueAtTime(10, _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.currentTime);\r\n    } else {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.biquadFilterNode.gain.setValueAtTime(0, _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.currentTime);\r\n    }\r\n  };\r\n\r\n  const toggleLowshelf = () => {\r\n    if (lowshelf) {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.lowShelfBiquadFilterNode.frequency.setValueAtTime(1000, _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.currentTime);\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.lowShelfBiquadFilterNode.gain.setValueAtTime(10, _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.currentTime);\r\n    } else {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.lowShelfBiquadFilterNode.gain.setValueAtTime(0, _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.currentTime);\r\n    }\r\n  };\r\n\r\n  document.querySelector('#cb-highshelf').checked = highshelf;\r\n  document.querySelector('#cb-highshelf').onchange = (e) => {\r\n    highshelf = e.target.checked;\r\n    toggleHighshelf();\r\n  };\r\n  toggleHighshelf();\r\n\r\n  document.querySelector('#cb-lowshelf').checked = lowshelf;\r\n  document.querySelector('#cb-lowshelf').onchange = (e) => {\r\n    lowshelf = e.target.checked;\r\n    toggleLowshelf();\r\n  };\r\n  toggleLowshelf();\r\n\r\n  //Distortion\r\n  let distortionSlider = document.querySelector(\"#slider-distortion\");\r\n  let distortionLabel = document.querySelector(\"#distortionLabel\");\r\n  let distortionAmount = 0;\r\n\r\n  const makeDistortionCurve = (amount = 20) => {\r\n    let n_samples = 256, curve = new Float32Array(n_samples);\r\n    for (let i = 0; i < n_samples; ++i) {\r\n      let x = i * 2 / n_samples - 1;\r\n      curve[i] = (Math.PI + amount) * x / (Math.PI + amount * Math.abs(x));\r\n    }\r\n    return curve;\r\n  };\r\n\r\n  const toggleDistortion = () => {\r\n    if (distortionAmount > 0) {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.distortionFilterNode.curve = makeDistortionCurve(distortionAmount);\r\n    } else {\r\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.distortionFilterNode.curve = new Float32Array([0, 0, 0]);\r\n    }\r\n  };\r\n\r\n  distortionSlider.value = distortionAmount;\r\n  distortionSlider.oninput = (e) => {\r\n    distortionAmount = Number(e.target.value) * 20 - .1999;\r\n    distortionLabel.innerHTML = Math.round((e.target.value / 2) * 100);\r\n    toggleDistortion();\r\n  };\r\n  distortionSlider.dispatchEvent(new Event(\"input\"));\r\n};\r\n\r\n//Animation Loop\r\nconst animate = () => {\r\n  setTimeout(animate, 1000 / 60);  // Approx 60 FPS\r\n  _visualizer_js__WEBPACK_IMPORTED_MODULE_2__.draw(drawParams);\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://av-ultimate/./src/main.js?");

/***/ }),

/***/ "./src/sprite.js":
/*!***********************!*\
  !*** ./src/sprite.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sprite: () => (/* binding */ Sprite)\n/* harmony export */ });\n// sprite.js\r\n// Desc.: Creates a Sprite object to be modified based on audio data.\r\n// Written by: Jack Moyen\r\n// Last Updated: March 2025\r\n// \r\n\r\nclass Sprite{\r\n    constructor(x,y,size, color, canvasWidth, canvasHeight){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.size = size;\r\n        this.color = color;\r\n        this.speed = Math.random() * 2 + 1;\r\n        this.canvasWidth = canvasWidth;\r\n        this.canvasHeight = canvasHeight\r\n    }\r\n\r\n    update(audioData){\r\n        let averageFrequency = audioData.reduce((sum, value) => sum + value, 0) / audioData.length; \r\n        this.speed = averageFrequency/10 * Math.random();\r\n        this.x += this.speed;\r\n        if(this.x > this.canvasWidth){\r\n            this.x = 0;\r\n            this.y = Math.random() * this.canvasHeight;\r\n        }\r\n    }\r\n\r\n    draw(ctx){\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.strokeStyle = 'white';\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(this.x, this.y);\r\n        ctx.lineTo(this.x + this.size/2, this.y + this.size/2);\r\n        ctx.lineTo(this.x, this.y + this.size);\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://av-ultimate/./src/sprite.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLinearGradient: () => (/* binding */ getLinearGradient),\n/* harmony export */   getRandomColor: () => (/* binding */ getRandomColor),\n/* harmony export */   goFullscreen: () => (/* binding */ goFullscreen),\n/* harmony export */   makeColor: () => (/* binding */ makeColor)\n/* harmony export */ });\n// utils.js\r\n// Desc.: Creates miscellaneous utility functions for the audio visualizer.\r\n// Written by: Jack Moyen\r\n// Last Updated: March 2025\r\n// \r\n\r\n\r\nconst makeColor = (red, green, blue, alpha = 1) => {\r\n    return `rgba(${red},${green},${blue},${alpha})`;\r\n  };\r\n  \r\n  const getRandom = (min, max) => {\r\n    return Math.random() * (max - min) + min;\r\n  };\r\n  \r\n  const getRandomColor = () => {\r\n    const floor = 35; // so that colors are not too bright or too dark \r\n    const getByte = () => getRandom(floor,255-floor);\r\n    return `rgba(${getByte()},${getByte()},${getByte()},1)`;\r\n  };\r\n  \r\n  const getLinearGradient = (ctx,startX,startY,endX,endY,colorStops) => {\r\n    let lg = ctx.createLinearGradient(startX,startY,endX,endY);\r\n    for(let stop of colorStops){\r\n      lg.addColorStop(stop.percent,stop.color);\r\n    }\r\n    return lg;\r\n  };\r\n  \r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\r\n  const goFullscreen = (element) => {\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.mozRequestFullscreen) {\r\n      element.mozRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) { // camel-cased 'S' was changed to 's' in spec\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    }\r\n    // .. and do nothing if the method is not supported\r\n  };\r\n  \r\n  \n\n//# sourceURL=webpack://av-ultimate/./src/utils.js?");

/***/ }),

/***/ "./src/visualizer.js":
/*!***************************!*\
  !*** ./src/visualizer.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   draw: () => (/* binding */ draw),\n/* harmony export */   setupCanvas: () => (/* binding */ setupCanvas)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _sprite_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite.js */ \"./src/sprite.js\");\n// visualizer.js\r\n// Desc.: Creates and draws a visualizer for the audio based on user inputs.\r\n// Written by: Jack Moyen\r\n// Last Updated: March 2025\r\n// Reformatted by AI. Obviously.\r\n\r\n\r\n\r\n\r\nlet canvas, ctx, canvasWidth, canvasHeight, gradient, analyserNode, audioData, spriteLeft, spriteRight;\r\n\r\n//Basic canvas setup\r\nconst setupCanvas = (canvasElement, analyserNodeRef) => {\r\n  ctx = canvasElement.getContext(\"2d\");\r\n  canvasWidth = canvasElement.width;\r\n  canvasHeight = canvasElement.height;\r\n  \r\n  gradient = _utils_js__WEBPACK_IMPORTED_MODULE_0__.getLinearGradient(ctx, 0, 0, 0, canvasHeight, [\r\n    { percent: 0, color: \"#000761\"},\r\n    { percent: .15, color: \"#44008B\" },\r\n    { percent: 0.35, color: \"#9F45B0\" },\r\n    { percent: 0.5, color: \"#E54ED0\" },\r\n    { percent: 0.65, color: \"#9F45B0\" },\r\n    { percent: .85, color: \"#44008B\" },\r\n    { percent: 1, color: \"#000761\"}\r\n  ]);\r\n\r\n  //Sprite setup\r\n  spriteLeft = new _sprite_js__WEBPACK_IMPORTED_MODULE_1__.Sprite(-30, Math.random() * canvasHeight, 30, \"#B5C0C9\", canvasWidth, canvasHeight);\r\n  spriteRight = new _sprite_js__WEBPACK_IMPORTED_MODULE_1__.Sprite(-50, Math.random() * canvasHeight, 30, \"#B5C0C9\", canvasWidth, canvasHeight);\r\n\r\n  analyserNode = analyserNodeRef;\r\n  audioData = new Uint8Array(analyserNode.fftSize / 2);\r\n};\r\n\r\n//Draws the visualizer for the audio based on user inputs.\r\nconst draw = (params = {}) => {\r\n  analyserNode.getByteFrequencyData(audioData);\r\n\r\n  ctx.save();\r\n  ctx.fillStyle = \"black\";\r\n  ctx.globalAlpha = 0.1;\r\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  ctx.restore();\r\n\r\n  // Specifications based on user inputs\r\n  if (params.gradient) {\r\n    ctx.save();\r\n    ctx.fillStyle = gradient;\r\n    ctx.globalAlpha = 0.3;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n    ctx.restore();\r\n  }\r\n\r\n  if (params.waveform) {\r\n    analyserNode.getByteTimeDomainData(audioData);\r\n\r\n    ctx.beginPath();\r\n\r\n    let sliceWidth = (canvas?.width || 800) / audioData.length;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < audioData.length; i++) {\r\n      let v = audioData[i] / 128.0;\r\n      let y = v * (canvas?.height || 400) / 2;\r\n\r\n      if (i === 0) {\r\n        ctx.moveTo(x, y);\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n\r\n      x += sliceWidth;\r\n    }\r\n\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = \"#E54ED0\";\r\n    ctx.stroke();\r\n  } else {\r\n    if (params.bars) {\r\n      let barSpacing = 4;\r\n      let margin = 5;\r\n      let screenWidthForBars = canvasWidth - (audioData.length * barSpacing) - margin * 2 + 5;\r\n      let barWidth = screenWidthForBars / audioData.length;\r\n      let barHeight = 200;\r\n      let topSpacing = 100;\r\n\r\n      ctx.save();\r\n      ctx.fillStyle = 'rgba(255,255,255,0.50)';\r\n      ctx.strokeStyle = 'rgba(0,0,0,0.50)';\r\n\r\n      for (let i = 0; i < audioData.length; i++) {\r\n        ctx.fillRect(margin + i * (barWidth + barSpacing), topSpacing + 256 - audioData[i], barWidth, barHeight);\r\n        ctx.strokeRect(margin + i * (barWidth + barSpacing), topSpacing + 256 - audioData[i], barWidth, barHeight);\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    if (params.circles) {\r\n      let maxRadius = canvasHeight / 4;\r\n      ctx.save();\r\n      ctx.globalAlpha = 0.5;\r\n\r\n      for (let i = 0; i < audioData.length; i++) {\r\n        let percent = audioData[i] / 255;\r\n        let circleRadius = percent * maxRadius;\r\n\r\n        ctx.beginPath();\r\n        ctx.fillStyle = _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(68, 0, 139, 0.34 - percent / 3.0);\r\n        ctx.arc(canvasWidth / 2, canvasHeight / 2, circleRadius, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.fillStyle = _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(159, 69, 176, 0.1 - percent / 10.0);\r\n        ctx.arc(canvasWidth / 2, canvasHeight / 2, circleRadius * 1.5, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(229, 78, 208, 0.5 - percent / 5.0);\r\n        ctx.arc(canvasWidth / 2, canvasHeight / 2, circleRadius * 0.5, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n  }\r\n  \r\n  if (params.ships) {\r\n    //Applies sprites\r\n    spriteLeft.update(audioData);\r\n    spriteRight.update(audioData);\r\n    spriteLeft.draw(ctx);\r\n    spriteRight.draw(ctx);\r\n  }\r\n\r\n  let imageData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\r\n  let data = imageData.data;\r\n  let length = data.length;\r\n  let width = imageData.width;\r\n\r\n  for (let i = 0; i < length; i += 4) {\r\n    if (params.noise && Math.random() < 0.05) {\r\n      data[i] = data[i + 1] = data[i + 2] = 100;\r\n      data[i] = 100;\r\n    }\r\n\r\n    if (params.invert) {\r\n      let red = data[i], green = data[i + 1], blue = data[i + 2];\r\n      data[i] = 255 - red;\r\n      data[i + 1] = 255 - green;\r\n      data[i + 2] = 255 - blue;\r\n    }\r\n  }\r\n\r\n  if (params.emboss) {\r\n    for (let i = 0; i < length; i++) {\r\n      if (i % 4 === 3) continue;\r\n      data[i] = 127 + 2 * data[i] - data[i + 4] - data[i + width * 4];\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ctx.putImageData(imageData, 0, 0);\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://av-ultimate/./src/visualizer.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;